#!/usr/bin/php
<?php
namespace Phate;
// 各ディレクトリ定数宣言
define('PHATE_SCAFFOLD_DIR', realpath(dirname(__FILE__)) . '/phateFrameWorks/scaffold/');
define('PHATE_HTTPROOT_DIR', realpath(dirname(__FILE__)) . '/htdocs/');

if (!isset($argv[1])) {
    show_usage();
    exit();
}

switch ($argv[1]) {
    case 'project':
        if (file_exists(realpath(dirname(__FILE__)) . '/projects/' . $argv[2])) {
            echo "error : project already exist\n";
            exit(1);
        }
        echo "scaffolding project : " . $argv[2] . "\n";
        require PHATE_SCAFFOLD_DIR . 'ScaffoldingProject.php';
        $scaffolding = new ScaffoldingProject();
        $scaffolding->execute($argv[2]);
        break;
    case 'database':
        $configFile = $argv[2];
        if (!file_exists($configFile)) {
            echo "error : yaml file not exist\n";
            exit(1);
        }
        echo "scaffolding database model from " . $argv[2] . "\n";
        $config = yaml_parse_file($configFile);
        define('PROJECT_NAME', $config['project_name']);
        include(dirname(__FILE__) . '/phateFrameWorks/base/PhateCore.class.php');
        $instance = \Phate\Core::getInstance($config['project_name'], true);
        require PHATE_SCAFFOLD_DIR . 'ScaffoldingDatabase.php';
        $scaffolding = new ScaffoldingDatabase();
        $scaffolding->execute($config);
        break;
    case 'help':
        show_usage();
    default:
        echo "can't find command\n";
        break;
}
echo "done. \n";

function show_usage() {
    echo "usage : scaffolding [command] argument\n";
    echo "command\n";
    echo "    help : show this message\n";
    echo "    project [project_name] : make scaffolding for project\n";
    echo "    database [yaml file] : make ORMappers from yaml file\n";
    
}

